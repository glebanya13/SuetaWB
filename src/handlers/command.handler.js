const { mainKeyboard, paymentKeyboard } = require('../config/keyboards');
const config = require('../config/bot.config');
const Logger = require('../utils/logger');

class CommandHandler {
    constructor(bot, userService) {
        this.bot = bot;
        this.userService = userService;
    }

    handleStart(msg) {
        const chatId = msg.chat.id;

        this.userService.addUser(chatId, {
            username: msg.from.username,
            first_name: msg.from.first_name,
            last_name: msg.from.last_name
        });

        const welcomeMessage = `–ü—Ä–∏–≤–µ—Ç! –Ø ‚Äî –§–∏–ª–∏–ø–ø, –∞–≤—Ç–æ—Ä –∫–∞–Ω–∞–ª–∞ ${config.channel.id}.

–î–∞–º –≥–æ—Ç–æ–≤—ã–µ —Ä–µ—à–µ–Ω–∏—è –ø–æ —Ç–æ–≤–∞—Ä–∞–º, –∏–¥–µ—è–º –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö. –ê —Ç–∞–∫–∂–µ –ø–æ–¥–µ–ª—é—Å—å –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤ –≤ –†–§ –∏ –°–ù–ì. –¢–∞–∫–∂–µ –º–æ–∂–µ–º –ø—Ä–æ–≤–µ—Å—Ç–∏ –∞—É–¥–∏—Ç –∏ –ø—Ä–æ–∫–∞—á–∞—Ç—å –≤–∞—à–∏ –ø—Ä–æ–¥–∞–∂–∏.

–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–µ–±—è —Ä–∞–∑–¥–µ–ª:`;

        this.userService.resetToMainMenu(chatId);
        this.bot.sendMessage(chatId, welcomeMessage, mainKeyboard);

        Logger.userAction('–Ω–∞—á–∞–ª —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º', chatId, msg.from.username);
    }

    handleMainMenu(chatId, text) {
        if (config.admin.chatId && chatId.toString() === config.admin.chatId.toString()) {
            Logger.warn('–ü–æ–ø—ã—Ç–∫–∞ –∞–¥–º–∏–Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –º–µ–Ω—é', { chatId, text });
            return;
        }

        switch (text) {
            case 'üì∫ –î–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É':
                const channelInfo = `–í –∫–∞–Ω–∞–ª–µ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ –µ–∂–µ–º–µ—Å—è—á–Ω—É—é –∞–Ω–∞–ª–∏—Ç–∏–∫—É 10 —Ç–æ–≤–∞—Ä–æ–≤ –∏–∑ —Ä–∞–∑–Ω—ã—Ö –∫–∞—Ç–µ–≥–æ—Ä–∏–π –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –≤ –±–ª–∏–∂–∞–π—à–∏–π —Å–µ–∑–æ–Ω + —ç—Ñ–∏—Ä—ã —Å —Ä–∞–∑–±–æ—Ä–æ–º –∏ –ø—Ä–æ–¥–≤–∏–∂–µ–Ω–∏–µ–º —ç—Ç–∏—Ö —Ç–æ–≤–∞—Ä–æ–≤.

–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏:`;
                this.bot.sendMessage(chatId, channelInfo, paymentKeyboard);
                break;

            case 'üè≠ –ù–∞–π—Ç–∏ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–æ –≤ –†–§/–°–ù–ì':
                const productionInfo = `–ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ –ø—Ä–æ–∏–∑–≤–æ–¥—Å—Ç–≤–∞ –†–§ –∏ –°–ù–ì, —Ä–∞–±–æ—Ç–∞—é—â–∏–µ –ø–æ–¥ –∫–ª—é—á.

–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –∏ –æ–±—Å—É–¥–∏–º –≤–∞—à –∑–∞–ø—Ä–æ—Å ${config.contact.username}`;
                this.bot.sendMessage(chatId, productionInfo, mainKeyboard);
                break;

            case 'üì¶ –ó–∞–∫–∞–∑–∞—Ç—å —É—Å–ª—É–≥—É "–ü–æ–¥–±–æ—Ä —Ç–æ–≤–∞—Ä–∞"':
                const productSelectionInfo = `–í—ã –ø–æ–ª—É—á–∏—Ç–µ –≥–æ—Ç–æ–≤—ã–π –¥–æ–∫—É–º–µ–Ω—Ç –∏ —é–Ω–∏—Ç —ç–∫–æ–Ω–æ–º–∏–∫—É –ø–æ –ª—É—á—à–∏–º –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è–º —Ç–æ–≤–∞—Ä–æ–≤ –¥–ª—è –ø—Ä–æ–¥–∞–∂–∏ –Ω–∞ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞—Ö.

–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –∏ –æ–±—Å—É–¥–∏–º –≤–∞—à –∑–∞–ø—Ä–æ—Å ${config.contact.username}`;
                this.bot.sendMessage(chatId, productSelectionInfo, mainKeyboard);
                break;

            case 'üîç –ê—É–¥–∏—Ç –∫–∞–±–∏–Ω–µ—Ç–∞':
                const auditInfo = `–†–∞–∑–±–æ—Ä –≤–∞—à–∏—Ö –∫–∞–±–∏–Ω–µ—Ç–æ–≤ –Ω–∞ Wildberries –∏ Ozon –¥–ª—è —É–≤–µ–ª–∏—á–µ–Ω–∏—è –≤–∞—à–∏—Ö –ø—Ä–æ–¥–∞–∂ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –≤–∞—à–∏—Ö –±–∏–∑–Ω–µ—Å –ø—Ä–æ—Ü–µ—Å—Å–æ–≤.

–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ –∏ –æ–±—Å—É–¥–∏–º –≤–∞—à –∑–∞–ø—Ä–æ—Å ${config.contact.username}`;
                this.bot.sendMessage(chatId, auditInfo, mainKeyboard);
                break;

            default:
                break;
        }
    }

    handlePayment(chatId, period, amount) {
        if (config.admin.chatId && chatId.toString() === config.admin.chatId.toString()) {
            Logger.warn('–ü–æ–ø—ã—Ç–∫–∞ –∞–¥–º–∏–Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –º–µ–Ω—é –æ–ø–ª–∞—Ç—ã', { chatId, period, amount });
            return;
        }

        const paymentMessage = `–û–ø–ª–∞—Ç–∞ –∑–∞ ${period} - ${amount}‚ÇΩ

${config.payment.info}

–ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –ø—Ä–∏—à–ª–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç —á–µ–∫–∞ –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è.`;

        this.userService.setPaymentInfo(chatId, period, amount);
        this.userService.setState(chatId, 'waiting_payment_screenshot');

        this.bot.sendMessage(chatId, paymentMessage, {
            reply_markup: {
                keyboard: [['üîô –ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é']],
                resize_keyboard: true,
                one_time_keyboard: false
            }
        });

        Logger.paymentEvent('–≤—ã–±—Ä–∞–ª –ø–µ—Ä–∏–æ–¥ –æ–ø–ª–∞—Ç—ã', chatId, amount, period);
    }

    handlePaymentScreenshot(chatId, msg) {
        if (config.admin.chatId && chatId.toString() === config.admin.chatId.toString()) {
            Logger.warn('–ü–æ–ø—ã—Ç–∫–∞ –∞–¥–º–∏–Ω–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–µ –º–µ–Ω—é —Å–∫—Ä–∏–Ω—à–æ—Ç–∞', { chatId });
            return;
        }

        if (msg.text === 'üîô –ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é') {
            this.userService.resetToMainMenu(chatId);
            this.showMainMenu(chatId);
            return;
        }

        if (msg.photo) {
            const photo = msg.photo[msg.photo.length - 1];
            const paymentInfo = this.userService.getPaymentInfo(chatId);

            if (!paymentInfo || !paymentInfo.period || !paymentInfo.amount) {
                Logger.error('–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞', { chatId, paymentInfo });
                this.bot.sendMessage(chatId, '‚ùå –û—à–∏–±–∫–∞: –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞—Ç–µ–∂–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–∏–æ–¥ –æ–ø–ª–∞—Ç—ã –∑–∞–Ω–æ–≤–æ.');
                this.userService.resetToMainMenu(chatId);
                this.showMainMenu(chatId);
                return null;
            }

            this.bot.sendMessage(chatId, `‚úÖ –°–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã –ø–æ–ª—É—á–µ–Ω! 

–û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è. –ü–æ—Å–ª–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –≤—ã –ø–æ–ª—É—á–∏—Ç–µ —Å—Å—ã–ª–∫—É –Ω–∞ –∑–∞–∫—Ä—ã—Ç—ã–π –∫–∞–Ω–∞–ª ${config.channel.id}.

–û–±—ã—á–Ω–æ —ç—Ç–æ –∑–∞–Ω–∏–º–∞–µ—Ç 5-15 –º–∏–Ω—É—Ç.`, mainKeyboard);

            this.userService.resetToMainMenu(chatId);

            return {
                username: msg.from.username || msg.from.first_name,
                period: paymentInfo.period,
                amount: paymentInfo.amount,
                photoFileId: photo.file_id
            };
        } else {
            this.bot.sendMessage(chatId, '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø—Ä–∏—à–ª–∏—Ç–µ —Å–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã –∏–ª–∏ –Ω–∞–∂–º–∏—Ç–µ "–ù–∞–∑–∞–¥ –∫ –º–µ–Ω—é"');
            return null;
        }
    }

    showMainMenu(chatId) {
        const welcomeMessage = `–í—ã–±–µ—Ä–∏ –∏–Ω—Ç–µ—Ä–µ—Å—É—é—â–∏–π —Ç–µ–±—è —Ä–∞–∑–¥–µ–ª:`;
        this.bot.sendMessage(chatId, welcomeMessage, mainKeyboard);
    }
}

module.exports = CommandHandler;
